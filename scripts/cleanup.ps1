# –°–∫—Ä–∏–ø—Ç –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ø–µ—Ä–µ–¥ –ø—É–±–ª–∏–∫–∞—Ü–∏–µ–π
# –£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏

Write-Host "üßπ –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Green

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
function Write-Status {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

# 1. –£–¥–∞–ª–µ–Ω–∏–µ –ø–∞–ø–æ–∫ —Å–±–æ—Ä–∫–∏
Write-Status "–£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏ —Å–±–æ—Ä–∫–∏..."
try {
    Remove-Item -Recurse -Force "build" -ErrorAction SilentlyContinue
    Write-Status "‚úì build/ —É–¥–∞–ª–µ–Ω–∞"
} catch { Write-Warning "build/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞" }

try {
    Remove-Item -Recurse -Force "dist" -ErrorAction SilentlyContinue
    Write-Status "‚úì dist/ —É–¥–∞–ª–µ–Ω–∞"
} catch { Write-Warning "dist/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞" }

# 2. –£–¥–∞–ª–µ–Ω–∏–µ egg-info –ø–∞–ø–æ–∫
Write-Status "–£–¥–∞–ª—è–µ–º egg-info –ø–∞–ø–∫–∏..."
try {
    Get-ChildItem -Path . -Recurse -Directory -Name "*.egg-info" | ForEach-Object {
        Remove-Item -Recurse -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *.egg-info –ø–∞–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*.egg-info –ø–∞–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

# 3. –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–æ–≤
Write-Status "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–æ–≤..."
try {
    Remove-Item -Recurse -Force "htmlcov" -ErrorAction SilentlyContinue
    Write-Status "‚úì htmlcov/ —É–¥–∞–ª–µ–Ω–∞"
} catch { Write-Warning "htmlcov/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞" }

try {
    Remove-Item -Force ".coverage" -ErrorAction SilentlyContinue
    Write-Status "‚úì .coverage —É–¥–∞–ª–µ–Ω"
} catch { Write-Warning ".coverage –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω" }

try {
    Get-ChildItem -Path . -Name ".coverage.*" -ErrorAction SilentlyContinue | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì .coverage.* —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning ".coverage.* —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

# 4. –£–¥–∞–ª–µ–Ω–∏–µ –∫—ç—à–∞ pytest
Write-Status "–£–¥–∞–ª—è–µ–º –∫—ç—à pytest..."
try {
    Remove-Item -Recurse -Force ".pytest_cache" -ErrorAction SilentlyContinue
    Write-Status "‚úì .pytest_cache/ —É–¥–∞–ª–µ–Ω–∞"
} catch { Write-Warning ".pytest_cache/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω–∞" }

# 5. –£–¥–∞–ª–µ–Ω–∏–µ –∫—ç—à–∞ Python
Write-Status "–£–¥–∞–ª—è–µ–º –∫—ç—à Python..."
try {
    Get-ChildItem -Path . -Recurse -Directory -Name "__pycache__" | ForEach-Object {
        Remove-Item -Recurse -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì __pycache__ –ø–∞–ø–∫–∏ —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "__pycache__ –ø–∞–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

try {
    Get-ChildItem -Path . -Recurse -File -Name "*.pyc" | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *.pyc —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*.pyc —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

try {
    Get-ChildItem -Path . -Recurse -File -Name "*.pyo" | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *.pyo —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*.pyo —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

# 6. –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤
Write-Status "–£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤..."
try {
    Get-ChildItem -Path . -Recurse -File -Name "*.swp" | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *.swp —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*.swp —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

try {
    Get-ChildItem -Path . -Recurse -File -Name "*.swo" | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *.swo —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*.swo —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

try {
    Get-ChildItem -Path . -Recurse -File -Name "*~" | ForEach-Object {
        Remove-Item -Force $_ -ErrorAction SilentlyContinue
    }
    Write-Status "‚úì *~ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
} catch { Write-Warning "*~ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã" }

# 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏–π
Write-Warning "–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if (Test-Path "venv_kgrv_dell") {
    Write-Status "‚úì venv_kgrv_dell –Ω–∞–π–¥–µ–Ω–æ (–ù–ï —É–¥–∞–ª—è–µ–º - —ç—Ç–æ –≤–∞—à–µ –∞–∫—Ç–∏–≤–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ)"
} else {
    Write-Warning "venv_kgrv_dell –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
}

# 8. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
Write-Host ""
Write-Status "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—á–∏—Å—Ç–∫–∏..."
$remainingFolders = @()
if (Test-Path "build") { $remainingFolders += "build" }
if (Test-Path "dist") { $remainingFolders += "dist" }
if (Test-Path "htmlcov") { $remainingFolders += "htmlcov" }
if (Test-Path ".pytest_cache") { $remainingFolders += ".pytest_cache" }

if ($remainingFolders.Count -gt 0) {
    Write-Error "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–ø–∫–∏ –Ω–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã: $($remainingFolders -join ', ')"
} else {
    Write-Status "‚úì –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
}

# 9. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞
Write-Host ""
Write-Status "–†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:"
try {
    $size = (Get-ChildItem -Path . -Recurse -Force | Measure-Object -Property Length -Sum).Sum
    $sizeMB = [math]::Round($size / 1MB, 2)
    Write-Host "–†–∞–∑–º–µ—Ä: $sizeMB MB" -ForegroundColor Cyan
} catch {
    Write-Warning "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞"
}

Write-Host ""
Write-Status "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä–∫–µ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."
