#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–∞–∫–µ—Ç–∞ kgrv.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞–∫–µ—Ç–∞ kgrv,
–≤–∫–ª—é—á–∞—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ About –∏ –µ–≥–æ –º–µ—Ç–æ–¥–æ–≤.
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–∫–µ—Ç—É kgrv –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
# –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø–∞–∫–µ—Ç
sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..'))

try:
    from kgrv import About
except ImportError:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–∞–∫–µ—Ç kgrv")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–∞–∫–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–ª–∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞")
    sys.exit(1)


def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.
    """
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–∞–∫–µ—Ç–∞ KGRV")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç About
    about = About()
    
    print("\nüìã –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    about.print_info()
    
    print(f"\nüîç –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ: {about}")
    print(f"üêõ –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ: {repr(about)}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤—ã–∫–æ–≤
    print("\n‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –Ω–∞–≤—ã–∫...")
    about.add_skill("Machine Learning")
    print(f"–û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏: {', '.join(about.get_skills())}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
    print("\n‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç...")
    about.add_project("ML –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è
    print("\nüìä –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (JSON-—Ñ–æ—Ä–º–∞—Ç):")
    import json
    info = about.get_info()
    print(json.dumps(info, ensure_ascii=False, indent=2))
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def interactive_demo():
    """
    –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –≤–≤–æ–¥–æ–º.
    """
    print("\nüéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è")
    print("-" * 30)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –∏–º–µ–Ω–µ–º
    name = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è 'kogriv'): ").strip()
    if not name:
        name = "kogriv"
    
    about = About(name)
    print(f"\nüëã –ü—Ä–∏–≤–µ—Ç, {name}!")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤
    print("\n–î–æ–±–∞–≤–∏–º –≤–∞—à–∏ –Ω–∞–≤—ã–∫–∏ (–≤–≤–µ–¥–∏—Ç–µ 'stop' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
    while True:
        skill = input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–≤—ã–∫: ").strip()
        if skill.lower() == 'stop' or not skill:
            break
        about.add_skill(skill)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –Ω–∞–≤—ã–∫: {skill}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print(f"\nüéØ –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:")
    about.print_info()


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    main()
    
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é
    while True:
        choice = input("\n–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é? (y/n): ").strip().lower()
        if choice in ['y', 'yes', '–¥', '–¥–∞']:
            interactive_demo()
            break
        elif choice in ['n', 'no', '–Ω', '–Ω–µ—Ç']:
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
        else:
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'")
